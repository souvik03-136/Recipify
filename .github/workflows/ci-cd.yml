name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18.x'

jobs:
  backend-ci:
    name: Backend - Test & Build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json

    - name: Install backend dependencies
      run: npm ci
      working-directory: ./backend

    - name: Run backend security audit
      run: npm audit --audit-level moderate
      working-directory: ./backend

    - name: Check backend code quality
      run: |
        npm run lint || echo "No lint script found, skipping..."
      working-directory: ./backend

    - name: Verify backend can start
      run: |
        npm run build || echo "No build script found, skipping..."
        timeout 10s npm start || exit 0
      working-directory: ./backend

  frontend-ci:
    name: Frontend - Test & Build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install frontend dependencies
      run: npm ci
      working-directory: ./frontend

    - name: Run frontend security audit
      run: npm audit --audit-level moderate
      working-directory: ./frontend

    - name: Check frontend code quality
      run: |
        npm run lint || echo "No lint script found, skipping..."
      working-directory: ./frontend

    - name: Build frontend
      run: npm run build
      working-directory: ./frontend

    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: frontend/dist/
        retention-days: 1

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [backend-ci, frontend-ci]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: frontend-build
        path: frontend/dist

    - name: Setup deployment
      run: echo "Deployment would happen here"

  dependency-check:
    name: Check for outdated dependencies
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Check backend dependencies
      run: |
        cd backend
        npm outdated || exit 0
      
    - name: Check frontend dependencies
      run: |
        cd frontend
        npm outdated || exit 0
